name: Release
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            asset_name: dncs-linux-x86_64
          - os: ubuntu-latest
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            asset_name: dncs-linux-aarch64
          - os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
            asset_name: dncs-windows-x86_64.exe
          - os: windows-latest
            arch: aarch64
            target: aarch64-pc-windows-msvc
            asset_name: dncs-windows-aarch64.exe
          - os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
            asset_name: dncs-macos-x86_64
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
            asset_name: dncs-macos-aarch64
    steps:
      - uses: actions/checkout@v4

      # Install cross-compilation tools for Linux
      - name: Install cross-compilation tools
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # Set environment variables for cross-compilation
      - name: Set cross-compilation environment
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/dncs.exe ${{ matrix.asset_name }}
          else
            cp target/${{ matrix.target }}/release/dncs ${{ matrix.asset_name }}
          fi

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.asset_name }}
          tag_name: ${{ github.ref_name }}
